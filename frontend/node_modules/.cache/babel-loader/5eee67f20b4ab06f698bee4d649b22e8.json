{"ast":null,"code":"import axios from\"axios\";// Old url: http://localhost:3001/api/notes\nvar baseUrl=\"https://calm-brushlands-87037.herokuapp.com/api/notes\";var getAll=function getAll(){var request=axios.get(baseUrl);return request.then(function(response){return response.data;});};var create=function create(newObject){var request=axios.post(baseUrl,newObject);return request.then(function(response){return response.data;});};var update=function update(id,newObject){var request=axios.put(\"\".concat(baseUrl,\"/\").concat(id),newObject);return request.then(function(response){return response.data;});};var noteService={getAll:getAll,create:create,update:update};export default noteService;","map":{"version":3,"sources":["/home/onowakow/Desktop/FSO/notes/notes_app/frontend/src/services/notes.js"],"names":["axios","baseUrl","getAll","request","get","then","response","data","create","newObject","post","update","id","put","noteService"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA,GAAMC,CAAAA,OAAO,CAAG,uDAAhB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,GAAMC,CAAAA,OAAO,CAAGH,KAAK,CAACI,GAAN,CAAUH,OAAV,CAAhB,CACD,MAAOE,CAAAA,OAAO,CAACE,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAArB,CAAP,CACA,CAHD,CAKA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,SAAD,CAAe,CAC5B,GAAMN,CAAAA,OAAO,CAAGH,KAAK,CAACU,IAAN,CAAWT,OAAX,CAAoBQ,SAApB,CAAhB,CACD,MAAON,CAAAA,OAAO,CAACE,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAArB,CAAP,CACA,CAHD,CAKA,GAAMI,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,EAAD,CAAKH,SAAL,CAAmB,CACjC,GAAMN,CAAAA,OAAO,CAAGH,KAAK,CAACa,GAAN,WAAaZ,OAAb,aAAwBW,EAAxB,EAA8BH,SAA9B,CAAhB,CACA,MAAON,CAAAA,OAAO,CAACE,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAArB,CAAP,CACA,CAHD,CAKA,GAAMO,CAAAA,WAAW,CAAG,CAAEZ,MAAM,CAANA,MAAF,CAAUM,MAAM,CAANA,MAAV,CAAkBG,MAAM,CAANA,MAAlB,CAApB,CAEA,cAAeG,CAAAA,WAAf","sourcesContent":["import axios from \"axios\";\n// Old url: http://localhost:3001/api/notes\nconst baseUrl = \"https://calm-brushlands-87037.herokuapp.com/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n\treturn request.then(response => response.data)\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n\treturn request.then(response => response.data)\n};\n\nconst update = (id, newObject) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\n\treturn request.then(response => response.data)\n};\n\nconst noteService = { getAll, create, update };\n\nexport default noteService;\n"]},"metadata":{},"sourceType":"module"}